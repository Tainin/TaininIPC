using TaininIPC.CritBitTree.Keys;

namespace TaininIPC.Client.Routing.Interface;

/// <summary>
/// Represents the process of adding to an <see cref="Table{T}"/>/>
/// </summary>
/// <typeparam name="TValue">The type of entry contained in the table.</typeparam>
public interface ITableAddHandle<TValue> where TValue : notnull {
    /// <summary>
    /// The key assigned to the add operation.
    /// </summary>
    public Int32Key Key { get; }
    /// <summary>
    /// Adds the entry generated by the <paramref name="entryFactory"/> to the table.
    /// </summary>
    /// <param name="entryFactory">A function which returns the entry to add given the key assigned to it.</param>
    /// <returns>An asyncronous task which represents the operation.</returns>
    public Task Add(Func<Int32Key, TValue> entryFactory);
    /// <summary>
    /// Adds the given <paramref name="entry"/> to the table.
    /// </summary>
    /// <param name="entry">The entry to add to the table.</param>
    /// <returns>An asyncronous task which represents the operation.</returns>
    public Task Add(TValue entry);
}
